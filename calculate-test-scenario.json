{
  "id": "calculate-test",
  "name": "Calculate Node Test",
  "description": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∑–ª–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π",
  "version": "1.0",
  "language": "uk",
  "is_entry_point": false,
  "start_node": "init",
  "scenario_data": {
    "id": "calculate-test",
    "name": "Calculate Node Test",
    "version": "1.0",
    "language": "uk",
    "start_node": "init",
    "nodes": [
      {
        "id": "init",
        "type": "calculate",
        "parameters": {
          "operations": [
            {
              "target": "score",
              "operation": "set",
              "value": 100
            },
            {
              "target": "lives",
              "operation": "set",
              "value": 3
            },
            {
              "target": "level",
              "operation": "set",
              "value": 1
            }
          ]
        },
        "next_nodes": ["show_initial"]
      },
      {
        "id": "show_initial",
        "type": "announce",
        "parameters": {
          "message": "üßÆ –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:\nüéØ –û—á–∫–∏: {context.score}\n‚ù§Ô∏è –ñ–∏–∑–Ω–∏: {context.lives}\nüìä –£—Ä–æ–≤–µ–Ω—å: {context.level}"
        },
        "next_nodes": ["basic_operations"]
      },
      {
        "id": "basic_operations",
        "type": "calculate",
        "parameters": {
          "operations": [
            {
              "target": "score",
              "operation": "add",
              "value": 50
            },
            {
              "target": "lives",
              "operation": "decrement",
              "value": 1
            },
            {
              "target": "level",
              "operation": "increment",
              "value": 1
            }
          ]
        },
        "next_nodes": ["show_basic"]
      },
      {
        "id": "show_basic",
        "type": "announce",
        "parameters": {
          "message": "‚ûï –ü–æ—Å–ª–µ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:\nüéØ –û—á–∫–∏: {context.score} (+50)\n‚ù§Ô∏è –ñ–∏–∑–Ω–∏: {context.lives} (-1)\nüìä –£—Ä–æ–≤–µ–Ω—å: {context.level} (+1)"
        },
        "next_nodes": ["advanced_operations"]
      },
      {
        "id": "advanced_operations",
        "type": "calculate",
        "parameters": {
          "operations": [
            {
              "target": "score",
              "operation": "multiply",
              "value": 2
            },
            {
              "target": "bonus",
              "operation": "random",
              "value": 100
            },
            {
              "target": "max_score",
              "operation": "max",
              "value": 500
            }
          ]
        },
        "next_nodes": ["show_advanced"]
      },
      {
        "id": "show_advanced",
        "type": "announce",
        "parameters": {
          "message": "üî• –ü–æ—Å–ª–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π:\nüéØ –û—á–∫–∏: {context.score} (√ó2)\nüéÅ –ë–æ–Ω—É—Å: {context.bonus} (—Å–ª—É—á–∞–π–Ω—ã–π)\nüèÜ –ú–∞–∫—Å –æ—á–∫–∏: {context.max_score}"
        },
        "next_nodes": ["math_operations"]
      },
      {
        "id": "math_operations",
        "type": "calculate",
        "parameters": {
          "operations": [
            {
              "target": "power_result",
              "operation": "set",
              "value": 2
            },
            {
              "target": "power_result",
              "operation": "power",
              "value": 3
            },
            {
              "target": "division_result",
              "operation": "set",
              "value": 100
            },
            {
              "target": "division_result",
              "operation": "divide",
              "value": 3
            },
            {
              "target": "modulo_result",
              "operation": "set",
              "value": 17
            },
            {
              "target": "modulo_result",
              "operation": "modulo",
              "value": 5
            }
          ]
        },
        "next_nodes": ["show_math"]
      },
      {
        "id": "show_math",
        "type": "announce",
        "parameters": {
          "message": "üî¢ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:\n‚ö° 2¬≥ = {context.power_result}\n‚ûó 100√∑3 = {context.division_result}\nüìê 17%5 = {context.modulo_result}"
        },
        "next_nodes": ["game_logic"]
      },
      {
        "id": "game_logic",
        "type": "calculate",
        "parameters": {
          "operations": [
            {
              "target": "score",
              "operation": "add",
              "value": 25
            },
            {
              "target": "score",
              "operation": "min",
              "value": 400
            },
            {
              "target": "health",
              "operation": "set",
              "value": -10
            },
            {
              "target": "health",
              "operation": "abs"
            }
          ]
        },
        "next_nodes": ["show_final"]
      },
      {
        "id": "show_final",
        "type": "announce",
        "parameters": {
          "message": "üéÆ –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\nüéØ –û—á–∫–∏: {context.score} (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –¥–æ 400)\n‚ù§Ô∏è –ñ–∏–∑–Ω–∏: {context.lives}\nüìä –£—Ä–æ–≤–µ–Ω—å: {context.level}\nüíö –ó–¥–æ—Ä–æ–≤—å–µ: {context.health} (–∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)\nüéÅ –ë–æ–Ω—É—Å: {context.bonus}"
        },
        "next_nodes": ["end"]
      },
      {
        "id": "end",
        "type": "end",
        "parameters": {
          "message": "‚úÖ –£–∑–µ–ª Calculate –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:\n‚Ä¢ –ë–∞–∑–æ–≤—ã–µ: +, -, *, /, %\n‚Ä¢ –§—É–Ω–∫—Ü–∏–∏: min, max, abs, random, power\n‚Ä¢ –û–ø–µ—Ä–∞—Ü–∏–∏: set, increment, decrement"
        }
      }
    ],
    "edges": [
      {"source": "init", "target": "show_initial"},
      {"source": "show_initial", "target": "basic_operations"},
      {"source": "basic_operations", "target": "show_basic"},
      {"source": "show_basic", "target": "advanced_operations"},
      {"source": "advanced_operations", "target": "show_advanced"},
      {"source": "show_advanced", "target": "math_operations"},
      {"source": "math_operations", "target": "show_math"},
      {"source": "show_math", "target": "game_logic"},
      {"source": "game_logic", "target": "show_final"},
      {"source": "show_final", "target": "end"}
    ]
  }
}
