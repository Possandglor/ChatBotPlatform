version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chatbot-postgres
    environment:
      POSTGRES_DB: chatbot_platform
      POSTGRES_USER: chatbot
      POSTGRES_PASSWORD: chatbot123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chatbot-network

  redis:
    image: redis:7-alpine
    container_name: chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network

  # Микросервисы
  chat-service:
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    container_name: chatbot-chat-service
    ports:
      - "8091:8091"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/chatbot_platform
      - QUARKUS_DATASOURCE_USERNAME=chatbot
      - QUARKUS_DATASOURCE_PASSWORD=chatbot123
      - QUARKUS_REDIS_HOSTS=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - chatbot-network

  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    container_name: chatbot-orchestrator
    ports:
      - "8092:8092"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/chatbot_platform
      - QUARKUS_DATASOURCE_USERNAME=chatbot
      - QUARKUS_DATASOURCE_PASSWORD=chatbot123
      - QUARKUS_REDIS_HOSTS=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - chat-service
    networks:
      - chatbot-network

  scenario-service:
    build:
      context: ./scenario-service
      dockerfile: Dockerfile
    container_name: chatbot-scenario-service
    ports:
      - "8093:8093"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/chatbot_platform
      - QUARKUS_DATASOURCE_USERNAME=chatbot
      - QUARKUS_DATASOURCE_PASSWORD=chatbot123
    depends_on:
      - postgres
    networks:
      - chatbot-network

  nlu-service:
    build:
      context: ./nlu-service
      dockerfile: Dockerfile
    container_name: chatbot-nlu-service
    ports:
      - "8098:8098"
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/chatbot_platform
      - QUARKUS_DATASOURCE_USERNAME=chatbot
      - QUARKUS_DATASOURCE_PASSWORD=chatbot123
    depends_on:
      - postgres
    networks:
      - chatbot-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot-frontend
    ports:
      - "3000:3000"
    depends_on:
      - chat-service
      - orchestrator
      - scenario-service
      - nlu-service
    networks:
      - chatbot-network

volumes:
  postgres_data:
  redis_data:

networks:
  chatbot-network:
    driver: bridge
